\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Algorithm Description}{1}}
\newlabel{sec-algo}{{1}{1}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces The function \textsc  {DetermineRank}. It calculates rank of the new point $p_n$ basing the ranks of points from $p \in P$ who dominate $p_n$}}{1}}
\newlabel{DetermineRank}{{1}{1}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces The procedure \textsc  {AddPoint}. On each step it splits tree of current rank into two parts: points, that should change rank ($C_i$) and points that should not. Then points, that have changed their rank on the previous steps, are being added to the remainder. The proof is given in Theorem 1\hbox {}}}{1}}
\newlabel{AddPoint}{{2}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Proof}{2}}
\newlabel{eq:cdefrg}{{1}{2}}
\newlabel{eq:p0def}{{2}{2}}
\newlabel{eq:cdef}{{3}{2}}
\newlabel{eq:rankd}{{4}{2}}
\newlabel{eq:p0dompd}{{5}{2}}
\newlabel{eq:nexcdompd}{{6}{2}}
\newlabel{th1}{{1}{3}}
